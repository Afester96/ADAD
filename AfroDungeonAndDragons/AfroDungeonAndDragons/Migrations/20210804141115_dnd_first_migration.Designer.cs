// <auto-generated />
using System;
using AfroDungeonAndDragons.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AfroDungeonAndDragons.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210804141115_dnd_first_migration")]
    partial class dnd_first_migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AfroDungeonAndDragons.Models.CharacterCreator.Alignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alignments");
                });

            modelBuilder.Entity("AfroDungeonAndDragons.Models.CharacterCreator.Background", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentDescriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageDescriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillProficienciesDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpellListExtendedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpellListIntroductionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuggestedCharcteristicsDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToolProficienciesDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Backgrounds");
                });

            modelBuilder.Entity("AfroDungeonAndDragons.Models.CharacterCreator.CanCastSpells", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CanCastSpellses");
                });

            modelBuilder.Entity("AfroDungeonAndDragons.Models.CharacterCreator.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlignmentId")
                        .HasColumnType("int");

                    b.Property<int?>("BackgroundId")
                        .HasColumnType("int");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Charisma")
                        .HasColumnType("int");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("EperiencePoints")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RaceId")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Wisdom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlignmentId");

                    b.HasIndex("BackgroundId");

                    b.HasIndex("ClassId");

                    b.HasIndex("RaceId");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("AfroDungeonAndDragons.Models.CharacterCreator.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CanCastSpellsId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpellCastingAbilityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CanCastSpellsId");

                    b.HasIndex("SpellCastingAbilityId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("AfroDungeonAndDragons.Models.CharacterCreator.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromBook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RacialTrait")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SizeId");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("AfroDungeonAndDragons.Models.CharacterCreator.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("AfroDungeonAndDragons.Models.CharacterCreator.SpellCastingAbility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpellCastingAbilities");
                });

            modelBuilder.Entity("AfroDungeonAndDragons.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordConfirm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AfroDungeonAndDragons.Models.CharacterCreator.Character", b =>
                {
                    b.HasOne("AfroDungeonAndDragons.Models.CharacterCreator.Alignment", "Alignment")
                        .WithMany()
                        .HasForeignKey("AlignmentId");

                    b.HasOne("AfroDungeonAndDragons.Models.CharacterCreator.Background", "Background")
                        .WithMany()
                        .HasForeignKey("BackgroundId");

                    b.HasOne("AfroDungeonAndDragons.Models.CharacterCreator.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("AfroDungeonAndDragons.Models.CharacterCreator.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId");

                    b.HasOne("AfroDungeonAndDragons.Models.User", null)
                        .WithMany("Characters")
                        .HasForeignKey("UserId");

                    b.Navigation("Alignment");

                    b.Navigation("Background");

                    b.Navigation("Class");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("AfroDungeonAndDragons.Models.CharacterCreator.Class", b =>
                {
                    b.HasOne("AfroDungeonAndDragons.Models.CharacterCreator.CanCastSpells", "CanCastSpells")
                        .WithMany()
                        .HasForeignKey("CanCastSpellsId");

                    b.HasOne("AfroDungeonAndDragons.Models.CharacterCreator.SpellCastingAbility", "SpellCastingAbility")
                        .WithMany()
                        .HasForeignKey("SpellCastingAbilityId");

                    b.Navigation("CanCastSpells");

                    b.Navigation("SpellCastingAbility");
                });

            modelBuilder.Entity("AfroDungeonAndDragons.Models.CharacterCreator.Race", b =>
                {
                    b.HasOne("AfroDungeonAndDragons.Models.CharacterCreator.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("AfroDungeonAndDragons.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
